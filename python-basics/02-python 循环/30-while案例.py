def example1():
    # 需求:打印五行五列的一个*组成的矩形
    """
    * * * * *
    * * * * *
    * * * * *
    * * * * *
    * * * * *
    """

    # 打印一行*号,使用while循环实现?
    # i = 1
    # while i <= 5:
    #     print('*', end=' ')
    #     i += 1

    # 使用while循环将刚才打印的* 输出5次,每次分别占用一行
    # i 控制外层循环的次数
    i = 1
    while i <= 5:
        # j 控制内层循环的次数
        j = 1
        while j <= 5:
            # 打印* 后更换结束符, 防止打印后自动换行
            print('*', end=' ')
            j += 1
        # 一行结束后,强制换行
        print()
        i += 1

    # 结论:外层循环控制的是行数, 内层循环控制的是列数 ,外层循环的i变量就是打印时的行号,内层循环的j变量就是打印列时的列号

    # 如果现在要打印6行8列的矩阵  i = 6  j = 8


def example2():
    # 使用while语句打印三角形,第一行一个* 第二行两个* .....
    """
    *
    * *
    * * *
    * * * *
    * * * * *
    """

    # 外层循环的数量:5 该图形有5行,所以i <= 5
    # 内层循环的数量:根据行号进行设定,  第一行 j <= 1  第二行 j <= 2.......

    i = 1
    while i <= 5:
        j = 1
        while j <= i:
            print('*', end=' ')
            j += 1
        print()
        i += 1


def example3():
    # 使用while循环的嵌套打印九九乘法表
    """
    1 * 1 = 1
    1 * 2 = 2  2 * 2 = 4
    .......
    """

    # 打印一个九行九列的直角三角形
    # 外层循环控制行
    i = 1
    while i <= 9:
        # 内层循环控制列
        j = 1
        while j <= i:
            # 九九乘法表中,公式规则就是  列 * 行 = 值
            print(f'{j} * {i} = {i * j}', end='\t')
            j += 1
        print()
        i += 1


def example4():
    # 打印一个倒 直角三角形五行五列
    """
    * * * * *
    * * * *
    * * *
    * *
    *
    """
    i = 1
    while i <= 5:
        j = 1
        while j <= 6 - i:
            print('*', end=' ')
            j += 1
        print()
        i += 1


def example5():
    # 打印一个等腰三角形 (第一行1个* 第二行三个*, 5 7 9,一共5行)
    """
        *
       ***
      *****
     *******
    *********
    """
    # 外层循环控制行数
    i = 1
    while i <= 5:
        # 内层第一个循环控制空格的数量
        j = 1
        while j <= 5 - i:
            print('$', end='')
            j += 1
        # 内层第二个循环控制*号的数量
        # print('*' * (2*i-1),end='')
        k = 1
        while k <= 2 * i - 1:
            print('*', end='')
            k += 1
        print()
        i += 1


if __name__ == '__main__':
    example1()
    print("################################")
    example2()
    print("################################")
    example3()
    print("################################")
    example4()
    print("################################")
    example5()
